// <auto-generated />
using System;
using Laverie.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Laverie.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20241103114723_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Laverie.Model.Entities.Cycle", b =>
                {
                    b.Property<int>("IdCycle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdCycle"));

                    b.Property<int>("DureeCycleHR")
                        .HasColumnType("integer")
                        .HasColumnName("DureeHeures");

                    b.Property<int?>("IdMachine")
                        .HasColumnType("integer");

                    b.Property<string>("NomCycle")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("NomDuCycle");

                    b.HasKey("IdCycle");

                    b.HasIndex("IdMachine");

                    b.ToTable("Cycles");
                });

            modelBuilder.Entity("Laverie.Model.Entities.Laveries", b =>
                {
                    b.Property<int>("IdLaverie")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdLaverie"));

                    b.Property<string>("AddresseLaverie")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Addresse");

                    b.Property<string>("CapaciteLaverie")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Capacite");

                    b.Property<int?>("ProprietaireCIN")
                        .HasColumnType("integer");

                    b.HasKey("IdLaverie");

                    b.HasIndex("ProprietaireCIN");

                    b.ToTable("Laveries");
                });

            modelBuilder.Entity("Laverie.Model.Entities.Machine", b =>
                {
                    b.Property<int>("IdMachine")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdMachine"));

                    b.Property<string>("EtatMachine")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Etat");

                    b.Property<int?>("IDLaverie")
                        .HasColumnType("integer");

                    b.Property<string>("MarqueMachine")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Marque");

                    b.HasKey("IdMachine");

                    b.HasIndex("IDLaverie");

                    b.ToTable("Machines");
                });

            modelBuilder.Entity("Laverie.Model.Entities.Proprietaire", b =>
                {
                    b.Property<int>("_CIN")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("_CIN"));

                    b.Property<string>("_Surname")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Surnom");

                    b.HasKey("_CIN");

                    b.ToTable("Proprietaires");
                });

            modelBuilder.Entity("Laverie.Model.Entities.Tarif", b =>
                {
                    b.Property<int>("IdTarif")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdTarif"));

                    b.Property<int?>("IdCycle")
                        .HasColumnType("integer");

                    b.Property<int>("coutTarif")
                        .HasColumnType("integer")
                        .HasColumnName("Cout");

                    b.HasKey("IdTarif");

                    b.HasIndex("IdCycle");

                    b.ToTable("Tarifs");
                });

            modelBuilder.Entity("Laverie.Model.Entities.Cycle", b =>
                {
                    b.HasOne("Laverie.Model.Entities.Machine", "Machine")
                        .WithMany("cyclesMachine")
                        .HasForeignKey("IdMachine")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Machine");
                });

            modelBuilder.Entity("Laverie.Model.Entities.Laveries", b =>
                {
                    b.HasOne("Laverie.Model.Entities.Proprietaire", "Proprietaire")
                        .WithMany("propLaverie")
                        .HasForeignKey("ProprietaireCIN")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Proprietaire");
                });

            modelBuilder.Entity("Laverie.Model.Entities.Machine", b =>
                {
                    b.HasOne("Laverie.Model.Entities.Laveries", "Laverie")
                        .WithMany("machinesLaverie")
                        .HasForeignKey("IDLaverie")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Laverie");
                });

            modelBuilder.Entity("Laverie.Model.Entities.Tarif", b =>
                {
                    b.HasOne("Laverie.Model.Entities.Cycle", "Cycle")
                        .WithMany("tarifsCycle")
                        .HasForeignKey("IdCycle")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Cycle");
                });

            modelBuilder.Entity("Laverie.Model.Entities.Cycle", b =>
                {
                    b.Navigation("tarifsCycle");
                });

            modelBuilder.Entity("Laverie.Model.Entities.Laveries", b =>
                {
                    b.Navigation("machinesLaverie");
                });

            modelBuilder.Entity("Laverie.Model.Entities.Machine", b =>
                {
                    b.Navigation("cyclesMachine");
                });

            modelBuilder.Entity("Laverie.Model.Entities.Proprietaire", b =>
                {
                    b.Navigation("propLaverie");
                });
#pragma warning restore 612, 618
        }
    }
}
